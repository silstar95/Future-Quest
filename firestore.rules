rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own simulation progress
    match /simulationProgress/{progressId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow users to read simulation data (for available simulations)
    match /simulations/{simulationId} {
      allow read: if request.auth != null;
    }
    
    // Users can read and write their own reflections
    match /reflections/{reflectionId} {
      allow read, write: if request.auth != null && 
        reflectionId.matches(request.auth.uid + '_.*');
    }
    
    // Users can read and write their own task completions
    match /taskCompletions/{taskId} {
      allow read, write: if request.auth != null && 
        taskId.matches(request.auth.uid + '_.*');
    }
    
    // Users can read and write their own building positions
    match /buildingPositions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own user actions
    match /userActions/{actionId} {
      allow read, write: if request.auth != null;
    }
    
    // Classrooms - educators can manage their classrooms, students can read classrooms they're in
    match /classrooms/{classroomId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource.data.educatorId == request.auth.uid || 
         request.auth.uid in resource.data.students);
    }
    
    // Notifications - users can read their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to read public data
    match /public/{document=**} {
      allow read: if request.auth != null;
    }
  }
}
